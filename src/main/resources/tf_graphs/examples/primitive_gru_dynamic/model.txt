node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "random_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_normal/mul"
  op: "Mul"
  input: "random_normal/RandomStandardNormal"
  input: "random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "random_normal"
  op: "Add"
  input: "random_normal/mul"
  input: "random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "random_normal"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "random_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "random_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "random_normal_1/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_normal_1/mul"
  op: "Mul"
  input: "random_normal_1/RandomStandardNormal"
  input: "random_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "random_normal_1"
  op: "Add"
  input: "random_normal_1/mul"
  input: "random_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "random_normal_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "Rank"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "concat/values_0"
  input: "range"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/Const"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/concat"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/Const"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/concat"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/Const"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/concat"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/Const"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/concat"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/Shape_1"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_1"
  op: "StridedSlice"
  input: "rnn/Shape_1"
  input: "rnn/strided_slice_1/stack"
  input: "rnn/strided_slice_1/stack_1"
  input: "rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/Shape_2"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_2"
  op: "StridedSlice"
  input: "rnn/Shape_2"
  input: "rnn/strided_slice_2/stack"
  input: "rnn/strided_slice_2/stack_1"
  input: "rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice_2"
  input: "rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/concat"
  op: "ConcatV2"
  input: "rnn/ExpandDims"
  input: "rnn/Const"
  input: "rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/zeros"
  op: "Fill"
  input: "rnn/concat"
  input: "rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArray"
  op: "TensorArrayV3"
  input: "rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "rnn/TensorArrayUnstack/Shape"
  input: "rnn/TensorArrayUnstack/strided_slice/stack"
  input: "rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "rnn/TensorArrayUnstack/range/start"
  input: "rnn/TensorArrayUnstack/strided_slice"
  input: "rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "rnn/TensorArray_1"
  input: "rnn/TensorArrayUnstack/range"
  input: "transpose"
  input: "rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose"
      }
    }
  }
}
node {
  name: "rnn/while/Enter"
  op: "Enter"
  input: "rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_1"
  op: "Enter"
  input: "rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_2"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_3"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_4"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_5"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_6"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/GRUCellZeroState_4/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Merge"
  op: "Merge"
  input: "rnn/while/Enter"
  input: "rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/Merge_1"
  op: "Merge"
  input: "rnn/while/Enter_1"
  input: "rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/while/Merge_2"
  op: "Merge"
  input: "rnn/while/Enter_2"
  input: "rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Merge_3"
  op: "Merge"
  input: "rnn/while/Enter_3"
  input: "rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Merge_4"
  op: "Merge"
  input: "rnn/while/Enter_4"
  input: "rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Merge_5"
  op: "Merge"
  input: "rnn/while/Enter_5"
  input: "rnn/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Merge_6"
  op: "Merge"
  input: "rnn/while/Enter_6"
  input: "rnn/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Less/Enter"
  op: "Enter"
  input: "rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Less"
  op: "Less"
  input: "rnn/while/Merge"
  input: "rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/LoopCond"
  op: "LoopCond"
  input: "rnn/while/Less"
}
node {
  name: "rnn/while/Switch"
  op: "Switch"
  input: "rnn/while/Merge"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge"
      }
    }
  }
}
node {
  name: "rnn/while/Switch_1"
  op: "Switch"
  input: "rnn/while/Merge_1"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "rnn/while/Switch_2"
  op: "Switch"
  input: "rnn/while/Merge_2"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "rnn/while/Switch_3"
  op: "Switch"
  input: "rnn/while/Merge_3"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "rnn/while/Switch_4"
  op: "Switch"
  input: "rnn/while/Merge_4"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "rnn/while/Switch_5"
  op: "Switch"
  input: "rnn/while/Merge_5"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_5"
      }
    }
  }
}
node {
  name: "rnn/while/Switch_6"
  op: "Switch"
  input: "rnn/while/Merge_6"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_6"
      }
    }
  }
}
node {
  name: "rnn/while/Identity"
  op: "Identity"
  input: "rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/Identity_1"
  op: "Identity"
  input: "rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/while/Identity_2"
  op: "Identity"
  input: "rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Identity_3"
  op: "Identity"
  input: "rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Identity_4"
  op: "Identity"
  input: "rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Identity_5"
  op: "Identity"
  input: "rnn/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Identity_6"
  op: "Identity"
  input: "rnn/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "rnn/while/TensorArrayReadV3/Enter"
  input: "rnn/while/Identity"
  input: "rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.632455532034
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.632455532034
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "rnn/while/TensorArrayReadV3"
  input: "rnn/while/Identity_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "rnn/while/TensorArrayReadV3"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "rnn/while/Identity_3"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  input: "rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  input: "rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub/x"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  input: "rnn/while/Identity_4"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
  input: "rnn/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split:1"
  input: "rnn/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub/x"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub/x"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  input: "rnn/while/Identity_5"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
  input: "rnn/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split:1"
  input: "rnn/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub/x"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub/x"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.707106781187
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  input: "rnn/while/Identity_6"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
  input: "rnn/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.816496580928
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split:1"
  input: "rnn/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub/x"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub/x"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "rnn/while/Identity"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
  input: "rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
      }
    }
  }
}
node {
  name: "rnn/while/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/add"
  op: "Add"
  input: "rnn/while/Identity"
  input: "rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/NextIteration"
  op: "NextIteration"
  input: "rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Exit"
  op: "Exit"
  input: "rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/Exit_1"
  op: "Exit"
  input: "rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/while/Exit_2"
  op: "Exit"
  input: "rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Exit_3"
  op: "Exit"
  input: "rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Exit_4"
  op: "Exit"
  input: "rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Exit_5"
  op: "Exit"
  input: "rnn/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/while/Exit_6"
  op: "Exit"
  input: "rnn/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "rnn/TensorArray"
  input: "rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/range"
  op: "Range"
  input: "rnn/TensorArrayStack/range/start"
  input: "rnn/TensorArrayStack/TensorArraySizeV3"
  input: "rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "rnn/TensorArray"
  input: "rnn/TensorArrayStack/range"
  input: "rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/range"
  op: "Range"
  input: "rnn/range/start"
  input: "rnn/Rank"
  input: "rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/concat_1"
  op: "ConcatV2"
  input: "rnn/concat_1/values_0"
  input: "rnn/range"
  input: "rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/transpose"
  op: "Transpose"
  input: "rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "rnn/transpose"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Gather/indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Gather"
  op: "Gather"
  input: "transpose_1"
  input: "Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.01
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 2
          }
        }
        double_val: 0.1
      }
    }
  }
}
node {
  name: "Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Assign"
  op: "Assign"
  input: "Variable_3"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/read"
  op: "Identity"
  input: "Variable_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "Gather"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "output"
  op: "Softmax"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "output_1"
  op: "Identity"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "output_1"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 2.0
      }
    }
  }
}
node {
  name: "Pow"
  op: "Pow"
  input: "sub"
  input: "Pow/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Pow"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "div/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 10.0
      }
    }
  }
}
node {
  name: "div"
  op: "RealDiv"
  input: "Sum"
  input: "div/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/div_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/div_grad/Shape"
  input: "gradients/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/Fill"
  input: "div/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/div_grad/Sum"
  op: "Sum"
  input: "gradients/div_grad/RealDiv"
  input: "gradients/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/div_grad/Sum"
  input: "gradients/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/div_grad/Neg"
  op: "Neg"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/div_grad/Neg"
  input: "div/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/div_grad/RealDiv_1"
  input: "div/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/div_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/div_grad/mul"
  input: "gradients/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/div_grad/Sum_1"
  input: "gradients/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/div_grad/Reshape"
  input: "^gradients/div_grad/Reshape_1"
}
node {
  name: "gradients/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/div_grad/Reshape"
  input: "^gradients/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/div_grad/Reshape_1"
  input: "^gradients/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/div_grad/tuple/control_dependency"
  input: "gradients/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape"
  op: "Shape"
  input: "Pow"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pow_grad/Shape"
  op: "Shape"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pow_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pow_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Pow_grad/Shape"
  input: "gradients/Pow_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pow_grad/mul"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "Pow/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Pow_grad/sub"
  op: "Sub"
  input: "Pow/y"
  input: "gradients/Pow_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/Pow"
  op: "Pow"
  input: "sub"
  input: "gradients/Pow_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/mul_1"
  op: "Mul"
  input: "gradients/Pow_grad/mul"
  input: "gradients/Pow_grad/Pow"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/Sum"
  op: "Sum"
  input: "gradients/Pow_grad/mul_1"
  input: "gradients/Pow_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Pow_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pow_grad/Sum"
  input: "gradients/Pow_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pow_grad/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Pow_grad/Greater"
  op: "Greater"
  input: "sub"
  input: "gradients/Pow_grad/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/Log"
  op: "Log"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/zeros_like"
  op: "ZerosLike"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/Select"
  op: "Select"
  input: "gradients/Pow_grad/Greater"
  input: "gradients/Pow_grad/Log"
  input: "gradients/Pow_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/mul_2"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "Pow"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/mul_3"
  op: "Mul"
  input: "gradients/Pow_grad/mul_2"
  input: "gradients/Pow_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Pow_grad/Sum_1"
  op: "Sum"
  input: "gradients/Pow_grad/mul_3"
  input: "gradients/Pow_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Pow_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Pow_grad/Sum_1"
  input: "gradients/Pow_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pow_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Pow_grad/Reshape"
  input: "^gradients/Pow_grad/Reshape_1"
}
node {
  name: "gradients/Pow_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Pow_grad/Reshape"
  input: "^gradients/Pow_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Pow_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Pow_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Pow_grad/Reshape_1"
  input: "^gradients/Pow_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Pow_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Shape"
  op: "Shape"
  input: "output_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Shape_1"
  op: "Shape"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_grad/Shape"
  input: "gradients/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Sum"
  op: "Sum"
  input: "gradients/Pow_grad/tuple/control_dependency"
  input: "gradients/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_grad/Sum"
  input: "gradients/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/Pow_grad/tuple/control_dependency"
  input: "gradients/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Neg"
  op: "Neg"
  input: "gradients/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_grad/Neg"
  input: "gradients/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sub_grad/Reshape"
  input: "^gradients/sub_grad/Reshape_1"
}
node {
  name: "gradients/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_grad/Reshape"
  input: "^gradients/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_grad/Reshape_1"
  input: "^gradients/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/output_grad/mul"
  op: "Mul"
  input: "gradients/sub_grad/tuple/control_dependency"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/output_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/output_grad/Sum"
  op: "Sum"
  input: "gradients/output_grad/mul"
  input: "gradients/output_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/output_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/output_grad/Reshape"
  op: "Reshape"
  input: "gradients/output_grad/Sum"
  input: "gradients/output_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/output_grad/sub"
  op: "Sub"
  input: "gradients/sub_grad/tuple/control_dependency"
  input: "gradients/output_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/output_grad/mul_1"
  op: "Mul"
  input: "gradients/output_grad/sub"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/output_grad/mul_1"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/output_grad/mul_1"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Gather"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_grad/MatMul"
  input: "^gradients/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_grad/MatMul"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_grad/MatMul_1"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/Shape"
  op: "Shape"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/Gather_grad/ToInt32"
  op: "Cast"
  input: "gradients/Gather_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose_1"
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/Gather_grad/Size"
  input: "gradients/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Gather_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/Gather_grad/ToInt32"
  input: "gradients/Gather_grad/strided_slice/stack"
  input: "gradients/Gather_grad/strided_slice/stack_1"
  input: "gradients/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Gather_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Gather_grad/concat"
  op: "ConcatV2"
  input: "gradients/Gather_grad/ExpandDims"
  input: "gradients/Gather_grad/strided_slice"
  input: "gradients/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Gather_grad/Reshape"
  op: "Reshape"
  input: "gradients/MatMul_grad/tuple/control_dependency"
  input: "gradients/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "Gather/indices"
  input: "gradients/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose/strided_slice"
  op: "StridedSlice"
  input: "gradients/Gather_grad/ToInt32"
  input: "gradients/transpose_1_grad/transpose/strided_slice/stack"
  input: "gradients/transpose_1_grad/transpose/strided_slice/stack_1"
  input: "gradients/transpose_1_grad/transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose/x"
  op: "UnsortedSegmentSum"
  input: "gradients/Gather_grad/Reshape"
  input: "gradients/Gather_grad/Reshape_1"
  input: "gradients/transpose_1_grad/transpose/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/transpose_1_grad/transpose/x"
  input: "gradients/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/transpose_1_grad/transpose"
  input: "gradients/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/TensorArray"
  input: "rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "rnn/while/Exit_1"
  input: "^gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
}
node {
  name: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/TensorArrayStack/range"
  input: "gradients/rnn/transpose_grad/transpose"
  input: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "rnn/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "rnn/while/Exit_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "rnn/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/rnn/while/Exit_1_grad/b_exit"
  input: "gradients/rnn/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/rnn/while/Exit_2_grad/b_exit"
  input: "gradients/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/rnn/while/Exit_3_grad/b_exit"
  input: "gradients/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "gradients/rnn/while/Exit_4_grad/b_exit"
  input: "gradients/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "gradients/rnn/while/Exit_5_grad/b_exit"
  input: "gradients/rnn/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "gradients/rnn/while/Exit_6_grad/b_exit"
  input: "gradients/rnn/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/Merge_1_grad/Switch"
  input: "^gradients/rnn/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_1_grad/Switch:1"
  input: "^gradients/rnn/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/Merge_2_grad/Switch"
  input: "^gradients/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_2_grad/Switch:1"
  input: "^gradients/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/Merge_3_grad/Switch"
  input: "^gradients/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_3_grad/Switch:1"
  input: "^gradients/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/Switch_4_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/Merge_4_grad/Switch"
  input: "^gradients/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_4_grad/Switch:1"
  input: "^gradients/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/Switch_5_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_5_grad/Switch"
}
node {
  name: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/Merge_5_grad/Switch"
  input: "^gradients/rnn/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_5_grad/Switch:1"
  input: "^gradients/rnn/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/Switch_6_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_6_grad/Switch"
}
node {
  name: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/Merge_6_grad/Switch"
  input: "^gradients/rnn/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_6_grad/Switch:1"
  input: "^gradients/rnn/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "rnn/while/Identity"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop"
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/Identity_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/Identity_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_4"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/Identity_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_7"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/Identity_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_10"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/Identity_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 3
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_13"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ShapeN/StackPop"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 6
          }
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "GradientDescent/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
  input: "GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/Cast"
  input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_Variable_2/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "GradientDescent/update_Variable_2/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Variable_2"
  input: "GradientDescent/update_Variable_2/Cast"
  input: "gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_Variable_3/Cast"
  op: "Cast"
  input: "GradientDescent/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "GradientDescent/update_Variable_3/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Variable_3"
  input: "GradientDescent/update_Variable_3/Cast"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent"
  op: "NoOp"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/ApplyGradientDescent"
  input: "^GradientDescent/update_rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_Variable_2/ApplyGradientDescent"
  input: "^GradientDescent/update_Variable_3/ApplyGradientDescent"
}
node {
  name: "sub_1"
  op: "Sub"
  input: "output_1"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 2.0
      }
    }
  }
}
node {
  name: "Pow_1"
  op: "Pow"
  input: "sub_1"
  input: "Pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "Variable"
        string_val: "Variable_1"
        string_val: "Variable_2"
        string_val: "Variable_3"
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  input: "Variable_1"
  input: "Variable_2"
  input: "Variable_3"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_2"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Variable_2"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_3"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Variable_3"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Variable/Assign"
  input: "^Variable_1/Assign"
  input: "^rnn/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_2/gru_cell/gates/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_2/gru_cell/gates/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_2/gru_cell/candidate/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_2/gru_cell/candidate/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_3/gru_cell/gates/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_3/gru_cell/gates/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_3/gru_cell/candidate/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_3/gru_cell/candidate/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_4/gru_cell/gates/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_4/gru_cell/gates/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_4/gru_cell/candidate/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_4/gru_cell/candidate/bias/Assign"
  input: "^Variable_2/Assign"
  input: "^Variable_3/Assign"
}
versions {
  producer: 24
}
