node {
  name: "image"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "filter1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 5
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\200Q\305>\024W\271>4\007\345> \030!=\016\2342?\216\365]?\240\273\030>jsX?\246\0358?\262\307C?\010\267\303>\342\242W?\020\257\356>\374s\r?P\242\035?\300p0?\240\003\301=<\333\256>L\034\022?\000\205\326>\240\367Z?\276\320\006?P\300\200>\360\261\273>\332\227J?\272\210|?\262\272\025?0t\304>f\034/?\"\347z?\274\257\313>\322\034J?\360\331f>\362\020D?$\326\241>\nAa?\020\365\220>\230u]?\326C\013?@\366\330<\302\025D?\354\3269?\204B\215><$\222>\322\035\001?\3601L?\020\270V>\210P\341>\226\331\024?P\274\246>\234-`?h\026\231>\224\354\234>\320-Q>P\277\201=h\243\235>dg\260>\270\303W?\234\215\236>\360\r\273>v\321<?xi%?\310\271)?\260pN>\340Ij?$;\250>\206\2410?\\\n\241>\260\t\230>\324;\366>\032k\026?\240\270\201=X\300\272>\214}\265>@\037\023=P\375m?\010[\326>\340\320\">\200\303:=@\263\366=BKF?|\354\257>\200\250\213<\"\031/?\324\242\344>X\251M?\340sm?\200|f?\374\215V?2\0059?@f\302<\266\341\014?\300\303[=0\344\324>Dq\336>\022\"\006?f\026\016?\034\374~?\014\3139?\376\365X?\020\202??\350_\007?\2202\256>\304\356\023?\334\211\300>8^{?\344\'\220>\374\350\316>\276mO?\030\215\t?Z\265v?r\030w?\"\265_?\320\246\303=LVC?\000Pc>\014n\221>h\0237>0e\240=\2103Z>0q^?\272\031}?\"\373\002?*Nx?x*\202>\272%q?<E\363>\256\344\026?\330ZF? :6=\300en>\310\006\335>\324\326\271>\244YI?B\2634?h\'Z>\264\237K?\"\"\016?\360o\365>(\037#>\366\203\n?\030\246y?\374\300\276>L\361\274>d:\251>\244\024\002?\000\364\000<\220\304\260>P\377\250>\250I\014>\260\200Q?L\360l?\314\000:?H\334C?x\313\255>\352\270`?\230\251\324>\212&M?\000\202\272<:\255N?"
      }
    }
  }
}
node {
  name: "filter1/read"
  op: "Identity"
  input: "filter1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter1"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\014\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "image"
  input: "atrous_one/SpaceToBatchND/block_shape"
  input: "atrous_one/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "atrous_one"
  op: "Conv2D"
  input: "atrous_one/SpaceToBatchND"
  input: "filter1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "atrous_one"
  input: "atrous_one/BatchToSpaceND/block_shape"
  input: "atrous_one/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\206\221.?@\251\357=\202Be?p\327\177?\236\341N?\014\037d?\204\221\256>p\004\274>\014\327e?<N&?\300\2501?\270\021x>\200*\237=:\016Y?X\304\023?2=\036?\250\025V>H\320\245>b\377C?\200\251@? \302\272=\240\000\307=>\207\016?\300\240\323=\254a\224>\254\372\275>\322}c?,\\\205>\312{|?H\023N>\010\347\231>\356\205\037?|\032\352>\264\022\262>|j\027?\014i[?\022P\006?0j\252>8\226I>\210\205X>\360M:>\340o\344=\360\031\214=\200z\222<\372 ^?\360\036\002>\340\335o=4\201\372>\020\261\n>\022\333\003?\024\024^?N\213A?\262\270\177?J\3719?P\261\230>,t\237>\000\024\210>d)\371>\\\331\t?\2400\'=\222tX?\330<U?\000[\307=,\227\016?Dmp?\212\203y?\332\226\014?\240\313p=\350\265\275>\312t1?\260\256j?\320\323s?\204\r\027?BW-?\3322;?\030\367\307>\276?-?\274x=?x\365p?$\3710?\250\262\344>\300\\9=x\201\016>T\217{?\234\277\305>\\_\220>@4\330<PO\224=\204\327\346>\272\272{?\234\0135?R\006G?\330\2274>\320RH>\200JZ?@rD>x\"m?\346Iz?\324I\372>|\262l?|%[?\252\311\005?Hwd?z\317a?D\3147?\\gR?8\303\203>>\243[?\030U\226>\332\036.?\300\2046?X!\200>,\013\001?\344\335\237>\226\236\027?\300[S=\000T\316=\364\366$?Ph!?\254B\204>\274\212\272>l\016\006?@)\250>\370P\266>b\342V?xA\306>x\361%?\200\211y?\304\311g?hR%>\3400\030>\314[L?V\352+?\260\372F>\200\240\263<\362\377\\?\316SN?P\020\307>\214\350\225>$\337\362>dI\030?\000\317V>p\005\353>\370.\032?(\371>>\240?\334>Ji+?\300\302\022>\210\317\262>,\213\366>h\270Y>\034r\200>\304e~?.\241\\?\276\204,?.]&?l \014?\324A\226>\254\236m?\220\216\353=\2647\326>\342\2025?\214T\364>\234\361\016?\226\236)?\206\367y?\0345\014?\000\334%;\252_j?\026\250a?\002\013V?\314\215\366>\336\214\001?\370\014\263>`=^?\244.\243>\224\2315?\260\256->\300\346)=\\\355f?\240S\327>\002\017\014?\364\316R?P\334\263=^\'\030?\360\222&?R1W?xo8?\316\327e?H\343\277>\214|\206>\204T\203>>\367q?\356Sw?\236\2554?\030%\'?\302u=?\320JX><\205\202>x\257+?x\201\232>\222\321v?\026\361w?\210\\\306>\016Wn?\22013? \344@?\370q\007>\222u\024?\006\312S?\000\315S=<\251N?\312\\\007?8\377q>\212\275\016?\014\306\005?\3642b?\370qR?\246\375/?h\327r>\024\301y?\342\232 ?\200\372v>\224\325\272>\320\014f?`\203\300>2d:?\272P6?P\177 ?P\213\'>\230\376.>\270\201\017>\242\013h?\336\3179?\014xK?\314\366\316>\304\331\365>\374\233C?\260\021\004?\274\207\\?\316\017\014?\030\232\">\000\302{?z\304c?\376\017%?\240\026\031?\010\271f?\234\001\022?\"\246+?\206\014]?\030\364*>,\364R?8%\265>zUn?`\024\344=\326\006^?\220\326\006?\270:B>\344\\+?h\303V?LQ\325>\260r\201=\220j6?\350\361\356>8r6?\000,D<\370\250\037>D\n\220>\270\341\310>\230\272l?xt3?\\\257T?`\347\020?\214/N?(\257.>H\317i?\344\347\251>\252\357A?xk\363>\020$\203=\200Q\306<\210\326V>L5\013?`\310\256>:\010R?\350\275h>@!\252<\234\343\256>\366YQ?\300=\207<\374\3220?\330v\345>\334\215M?R}}?P\211\245>\220\354\310=\020\264\342=\224\331\004?\214]v?\010\331\263>\270)\334>Hz\250>T\372\377>\200\220\264>\264\304\027?\276\215c?\334\374)?X\230\\>8\375*>H\346\264>\220h[?(Z(>4\227z?B\255v?&vF?\200\257k>:x@?\250\016\241>`\335c?\334\354\266>|zt?\324\237\343>D\251k?\010\343Q>\350\204\021?>\035l?\000\360g>\340\0224?\000R*=\360\232\014?\300\347C?\240$\002>\000a@<`\360C>\030\005\002>\304*\301>\2322`?\234\375\202>h\255a>\032\367Z?|ML?\254\356\324>`\252\234>p\"=>\220z\222>l\261\004?\306\023U?H\r]?J3E?\360\301\035>\226~@?N\2279?\324c3?\274\023\262>\310\207\263>08H>(o.?\030\326S?\360\004\267=\352\2247?\000\307\323>\344\271\340>h\211\362>\002\001b?\300ZH?x`\342>X\303c?t\r-?P\266$?R\371\001?\212n\032?\326\350\\?zY\023?`qp>\354\271\323>pT\341=\330\221\323>\356\2711?@wy=\232\2556?~\024\177?f\202\036?,+\205>\350\322]?p\024\306>\300#\014?\314}J?\360\236\027>\376=\030?|\214\224>\200\320t=>\327\t?\006\3025?\020:\303=\314\247\353>\342\326\030?\270jx>\326L??L\274\302>\270\037$>\200\210\234=\340`\022=\340@\343=\310\247\035?\010\361\n?\314\333\n?\334\n\223>\300\301,>\024\371\210>,\375Q?p)\007?rM=?D\201\224>\320\322\350=\240\362p>\224\306\301>Pu\n>\362\222\004?P\032K?\370<j?\014\250\347>,\273!?\370/m>&\265h?05\247=T&\017?\350\355\304>\"C.?\024\336\237>\330\374\010?F:\027?8\2465>\246\214y?\344\022/? \t\305=|\272*?\300\3025>\000&\360;\240\214L?\340\300_=$\032\033?F\331A?\240\237\301>\220\337s?.\224D?\370i\016?\234\302\214>\240\316\322>XCR>\226\267A?l\266\265>\340\226d=F\365<?\3303\235>\336/]?\364\2073?d\223\271>\0021\016?8\"\217>\n\017e?h\273\004>\300$E?h}3?\254\373\361>\214%\317>\366t!?\034p\307>\330\321\231>\220\324H?p\230\277>`\031=?\332\206u?\014\034\304>4@\351>\240\3311>\356\357\032?,\331\301>hE|?h\210\371>\350%\356> U\270>\360\006\000?\024\233^?\300=\230>\340\323a=\212;\017?\024\372S?\200\256\r>\374\306\321>N\227R?\034\346X?\010\017#>X\352U?\000\376)=x\240\361>:\375 ?\360n\225>\334\264\202>\000u\245;\316c~?p\0238?\212\310\003?(\2565?\270\214\333>P\244<?v5\002?\030\246\004>f\321q?p\271O>\240]\013>lQ\252>~T6?\024l\342>\316\032i?@T\014?\222\371\n?\250\375\r?jB\003?@\210}>*\234\035?V\331&?\3502\347>\240\241\222=\360 W>0b\r?\000\244\'<`\0277?P&g?\260\034\317=\200\234}=$\364\027?\326\237??L\2539?,\323\366>\000t\241;\240\227B? \341R?\320\013\211>\014\0366?\312\t+?\304\227\003?\224b\357>\200\253\r=:\027f?\372\364[?\354y\342>\222y\n?`8\216=\304D\331>\232&/?\000\356v<$\240\322>$t\331>h\215k?B\201!?\026\327q?\320l\202>H\354\004?\252\372\017?\200\355D=4\320\340>\214\340\220>\014e^?\360,f>pA\225>h\335\003?\324\1777?\010\233\322>\270\347\357>\300^~?T\0071?F\203.?\322\222\014? \005o?@\t\034>\264\202\203>p\340\257=\334\342\343>\200\220\260<\004}q?\356\326w?\276vQ?Ps\260>X\223<?\276\372\003?\032&4?\0000o?z9;?N\277\'?l&\232>\000\027,?x\226|?\\\277\341>\260\257\035?\360]\251=T\034\275>t\261~?v\027\026?\020\235\377>\340\233}> \020y>LF)?\220\331\303=\310\237&?\374\303\004? G\202=t\030\364>T\340\357>\270gB>\350\024\277>XUe>\340Z1>\332x\030?X\'\267>PQ\324=P\373\353>\232|7?H?\\?8\305\307>\314\034(?4\247\343>t\373Q?@^\267>0\224\030>TE>?.{y?\260\235Q?@\230*>PX\346>\360\353\215=0t\316>\316%9?h\265\034>\3100y?\000\303\365>\200\304\003<z\0372?\220\005L>\254\222\333>\334\331a?X7\022?\354\256\324>8\200\027>PB/?\270{\034>0\030~?N3,?\030(D><\327\367>\250\334\361>\352Z2?\304ba?\314\225\301>\000`(>\320\363e?\340\002\025>\370{\340>\370\251y>\304\257\247>\260\2541>\0340\024?\374C\333>\200\240\275=\260\010\333>\026N1?\312\263t?\000\014\234:\010\\x>lYF?\000Hv;z\023\022?\024\226k?\\}O?\230\355,?\2008\337=\340\207I=t\026\307><\036:?\302y,?0\001\247=\220\323t?\034\031F?\264>J?\210^\344>\340\024J?\024B\t?\360U_?\010\214\007?LU\023?\266\370\'?\374&\377>\250H#?\324*\364>\026\333J?\\\353\355>\240\2463>PA\366=\244.)?\314Ko?\376\177\032?\024>\221>j\251a?\354\234\315>0o\250>\344\203t?\300\213\375=\356\352=?0H\032>\340lT>\004\305\276>\264\023Y?\360\026\354=\354\377\373>8\1772>R\315\\?\034\026 ?\020\346\206>\364\235M?\200\226\334=\334sF?\212v\001?\000o\233;\260\264\207=P\352X?$\330\233>t\324W?\350\241\034><\353\347>\000TJ=`\r\334>\020\314X>\036\326:?\n\267&?\264\255|?\242\324\"?\210\242\340>\260\177\204=\356\373\036?${\325>\340\272b>\"\2010?&\356M?\3606<?\340\205\022=\\\3165?\344)\253>h/\035?:y\007?\264vb?@D\233=\364\022\370> $e=\364d\236> \201\"= _\305>\342#]?\020\240\214=lc\306>\202\226k?`\213\201>\360A\301>\244k\305>\232H,?\214A!?(\021:>j`n?z\314F?\320C\242>\356\007I?P\355\220=,\252P?\350\207[>Fkg?\3040\267>\004\013d?\\U\210>f\n=?\3703N?0\205z>\262\221k?h\334Y>\226\301\036?H\265H?\334\251\327>(\311\203>\020\026~?\206\234=?\006)n?\n\333^?\022ig?\220|}>\3647\225>4\010\273>\3701->\364\006\211>\342\235a?\n\242#?p\363#?\310\032\357>\316\031c?\350\347\016>\314F\221>\240\251\037>\210\362\345>\244\333*?\364\342\317>\220m\032?P}T>\340\002\270=\260\310\356>\034MF?\000q\246<\246\351,?\200,\257=2\374\004?\214K7?\374\332\366>\030\344\301>\2644\014?0\034->\320\235\225>\260\336\030>\034\236\233>\000\265\206;\200\224\023>`\333c>\240qS=\262\335<?\242\014\014?rdm?\370m\263>\204<\000?0\303C>\2005\t=\000\3508>\360y\216>\260\342\227>$\230\246>\346&i?\300]\226<\262\255H? \307a>P\222\232=\212dg?\034\351\266>\360\016\034>\254\203|?\262{\001?6\016\032? \313\243>@\037\206=\330\243[>\320\315\314=,\300;?\354B\251>\220\303e?\364T\215>x\024t>p\254\253> \236;=$\337\271>Dt\"?`\006\377>\262\376A?F\337\n?|v\206>\226\027,?f\371N?\200\220\017>\320%\021?@\361u>\n\023M?ZsT?\000/\316;*G3?25+?\252\305Q?\226\266J?\\}I?Z\352\n?6\314r?(\354%?\014\267\336>\354\003\233>P=\367=r\2609?\332\372\006?\254\245\306>\300Ee=P\177z?\330\375\031?\220\356\352=@\267\315=@\223u>\240>Z?\200Qw=\320\\!?\020\213\340=hB~>t\364M?\352{\010?\362eX?X]\360>\014f\236>f\340q?\300\016\372>P\201\n?\000\"\010=H\366\337>\346\346\035?\262\243F?.xK?LMy?\304\251\027?\344\225N?P\025\\>\020\245\">\240\302\274=\200\267D<\010\253_?\246\035\032?\316\241\017?0C\207=Vd:?\356\030\000?\256\371\023?\310G\027>\364\360\232>\314>\250>`\305l?\212\320\024?\270\005\261>8\215O?\220\265B?\244\206P?(\300\305>\352\377\177?\030\030P?*O}?x\320\017>\320\3167>HU\037>\220Hq>\350\000\334>p\r\020>Pd\203=\240{b?N\314\034?@\225B=\274f\016?\374\326\027?jPP?\240\016\026>\316FA?8Y\004>\036.4?\300\301G?\340\332O=0\247\217>\216@X?\262Ow?\270>[>\320{\211=r\306m?x\030\260>\210Rx>&`G?\254\017e?r\264\\?\036!P?\020\336k>X`\335>\350\217\371>X\020\307>`K\035=\320v7>\270\003T>@\334~>\256\217m?x\377\363>\222+??\270\253\237>\250\250Q?\230\035\347>\360\271\214>\240vr=\204\274\250>\030\033L?VZh?`6\002?\000\217\352;X]O>@\003\237=\332RD?b@1?\304@_?\036_\020?l/\344>@\252>?\340\003\316>d\031\267>\346f|?\370mA>\000\312\245;T.-?\230\307\037?\364\036\000?\324V$?\270F\030>\3602\360>\366)\032?\360\214\305>\220\335C>\220jx?0\367@?\200\326\264<\270\347\345>&1r?\n[w?\362\'=?\020\271\252=j\322\'?\354\034\360>B\266N?\032\3371?,\240\343>\220\232!? ]q=@7\270=pZ\237=&\302\016?(\007\177?8\'\212>\360^=?`mg=\010`\374>@\"4?\200(\350>(\020\215>\334(\237>\360K\n>\242\267\002?\374\375\277>\360|Q>h\320\203>\010\332j?d\3056?\300t\217>h94>\340ot>\020\272\235>\302oj?hQ\242>R\300A?0\366\351=\004\tc?\000f\000;\026{(?\360\036\346>\224\353\206>\266\331{?\360\244$?\024v.?\320\232\213=\236\244j?\246\177L?t\307\006?\240:\272>\020j\205=\312Pb?0\n]>\334,\271>\014\231\373>\220\021V?\232;m?\372\222&?\360\032\251>h<\332>0\223K>8\003>>\216\245A?\000$\236:\310\0075?d\265x?(k\315>\300\227S>\234\236v?\340W?>\360\004\267>ZB4?\340\036\\=\276\312r?\314\036\031?\220\260\303=R\301\005?:\307$?h`A?\210;\316>2V_?F\374\r?\214\301\210>D\024\264>\212s\010?\340\314\273>\266\311=?\024H\253>\014o\'?\230Z\253>x\243\277>\220+\267>\214W\023?\320\210\354>8X^>T\220\230>\312fX?8\223??\300S%>\2445X?\250\n\'?\030\317\022?\240\r\321>\362\243.?\246\274\027?\370\236\347>x\375o>@]\022=\214a\220>\310\357t>\332~@?\236\206;?\2443\326>\250\247D>\366ec?B\233)?B\237F?\002}\013?\360\014X>0\2024?t\r\220>\224\275\304>J\315=?\224\274\216>\262\343\005?zB\037?`\005\316=\004\320\276>$P\001?\212\214p?\244\307\275>v\3500?\236\247X?\000b\337;\364\354\373>\264*`?\020\262T?8\300\034>\022\"f?F$U?(\025\001?\200\210\017>\236\240N?\000\031\366=\026Pz?*\321(?\254\214\206>\3600\343>\010;{>\340\225\371>\020?\021?x\253V?\006\322d?\000`C;\250\374^?\270e\002>\266B7?\232\374a?\000\340\000?@8\351<6\252 ?\032\250l?@W\255=j9h? \025\235>\024\265\337>\032\001{?@\031\224=`\240\030?\210\320\016?\274\"-?\332\221U?<\324\366>\360\301\334=\352\314\036?\340\2276=\200n\365<\312\000\027?\370\307\261>\000\242O?0\252J?&i\\?\000\360\323=h^0>\274z\025?\320;\221>\330\024+>\322\200G?\340\027v>X\034\216>>w9?\006\022\r?l\215Q?`Fm?\302J\026?\314\365\237>\026EH?\200\016z<\334\323\255>6\013\000?Z\312\002?VB\005?\270\377\367>v\373_?\000m]<\226\217f?\254\001\237>|\0002?\340\2302?\334\300\232>\356@g?\224\300??@u\354=\010\200\023?|\024\212>|\260j?f\200d?\300\021\344<tR{?0\305\311=\212\010\017?\222\r^?\346\006~?0)\036?t\346\313>\240\\\336=\200\0378=\272+S?d\304\020?\3007\277=P\303\323>d\355.?$\310\010?h\\\217>\344\3361?PuS?\300\033z>\344\327)?jah?\344\210i?\3522\022?Nj_?\264\345\243> \334\031>\304\301\373>\336\255\024?\364-9?0\\\001?\324\r\302>\210/Y>x\362<>J@\002?\200\362+?\324\205w?v\216\004?4*%?\310\350\205>|\326{?\302wu?j\313}? ^j= \023\254=\200,2?\332\255]?t\014\233>\250s!>0\310\337>rE3?Zwn?p\030\244>\032\3605?\022QC?nI??\270\363\023>\272\274\027?\020\264\317>P\327\276=@7\302<\200\323\265>&\244\036?\254\306\002?`\277\016=\264\037a?\260\244\t>\200&\272<\210N`?\314\201\243>p\007\343=\236M6?\202\347:?L\374\324>\320\031\304=\352h\013?\376\303D?\320&\033?h\334\365>\202\347j?\000m~=R\2054?T\342\252>,r\204>\324W\313>p\034\246=\254DD?\226\235e?\330I{?by)?\336yw?H\304\003?\200U\260<R0-?0z\260>0@\201=V\177<?H.a?\006\260]?XR\032?\374?\374>\374\014\306>dE\336>dV_?\340V\217>\374\255_?\220\311\231>0\307\354>\304;\036?\324e;?\300U@>\370\251\177>\\\321\246>\200<,>dcK?\212-!?J/>?\210\005\314>h4B?\270U}?\254\352t?d\246\243>\320N\024? X\023?\024\003\303>\370\360\000?\236\251\036?P|\222>\316\230\003?\264di?\200\000X?\376k>?<\200\217>>\202B?`\262\330>\024\270\\?8=n?\350\246\235>\344\316\001?\2040M?\000\326N>\310%\204>T`\256>\340vQ=\370QG?\000\327S<p\nw>\"h4?\350\214^?\220\363\271>\034\314\230>\204\0131?\262yu?\310\241e?>\237t?\252\363C? \335\225=\330ig>\200\036\177=\336c4?h+\262>\200?\'>RV\006?\254\320\036? @\005=2\024Z?\270\237l>B|Z?\330\2528>\000\312(>\204\007\213>H\\L>P\326,?lm\210>\244o=?2\217B?\260;F>@4\230=0\327\224>D\320\362>\022\275\033?\202\037\014?\344:a?@\336f= \253\n?`\020\027=0\342\235>\242qV?\300\222P>`V =0\374\367>P\220\r?`\303\372=\362\0352?(\311\226>\304\276\246>\320\222Y?@\262^=\032sl?4\311C?\254\317\310>>T3?VT^?\"\334)?Rh\010?\030D >^\233L?\374\353\335>h\314\270>\360\377R?\\\000\274>\240\033\314=\000\002 =\354r\372>hu\030>\324\232\301>\020k\275>\266\337u?\240\027==\240\255\022>\034\367\371>\344\204\315>\354~\305>6n{?\200\256p<\220\016\361=z\321\021?\030{\240>\314\001\275>\300\234t> ?,=\312\027\023?D\315\017?\\\242\326>.\330G?8\036=>\340\353\030=\200\331\004?\340\215\262>\234\370\032?:r\"?\360u{>\020\254\353=\300\345Y=\210g\r?&[4?\350?\363>z\302I?8\204g>\344\317a?\34400?\244\205}?\000\013\340;\200\231\203=b\316\026?\362{\017?\304\005^?@\236q?H\\a?(\217\276>\030a[>N\3141?\020\2501>~\341}?\340\252\357>\004DG?\342\334Y?\340C\025=\340\000\213=\300\346\247=&\177\026?\260Fg?X\205 >\220I\345=N\361C?\316<%?fO\t?@\247\007?\372\266q?\334\"\251>P\324\257>\370\226\247>p-\272>h\034\013>r\252x?\344\360E?\242dy?t\001\261>\330\213\241>nf!?\3449R?$_\272>\030\257Y>t\334\301>\374\272a?\366\'Y?\232\r\021?\020!N>:\357c?\300n*>@\177B>P4j?\000\305\224>\234\365;?\244\226*?\330gW>ph\332=Fw*?\302\213`?\232MX?x\356M>\020\331\266=B\363g?\320\227.?`\332W?\000<<<(\237e>\3622\021? K\252>\"mE?@\223a>\312\222l?x*R?@\325\r=\376\016]?\304\320\026?n|$?tM\210>p\257W>\3649\375> Q2=TM\346>\354b\343>\222u8?\016\355n?\004\252a?`\341/?\332\246E?6\017T?\350\"*>\000\264v=\300\350/=\034\335\033?\344\005Y?\006\245\001?\002\352\t?\240\232\246=&\271M?hgN?\270\026{>\300\324\271>\300\317L?\034\177\336>P\302\247=`\264*>\2144A?\3602!>\366\0278?0\357\220> \303N>\230d >\254\215\274>\250\234\025?\360]\332=D\364\303>\340\377\032?b\232o?l\230\305>\214G\366>\240\341\\>\334\233\374>@\212\275>\262\333\r?t\244\341>\000\025R?@\223\333> \315\014>`&\033>\270\356\274>D\020\352>@\351\342<\344.{?4\007\222>\310x\275>\316`~?\300U\252>N\027z?\360\t\213=\316Xt?H\260\213>\200\242\010>(\240\004>\230@Z>@}]=r\261\026?\210\021J>\314\201\264>p 6>v\373K?pPQ?R\347\032?\364\333\001?pU\342=\236\274W?b\3049?(x\333>2\251W?\2348\250>F\244e?L5\200>\344\351I?\340u\277>\310\276f>\220\256N?\002\371\014? \t\335>ls\262>\340n\000=\276C:?\\\\f?z\354[?X\2619>@1\202<h#\004?`\340F>\234`\274>x3\231>x\027K>\362\3724?\036\207\n?\260-\341>\342\'u?:\3014?X\202~?\350\343M?LQf?\010\375\221>\374\366*?\374-\301>\214\273\024?(0->\200k\306=\200>>?\030:&?8\372\246>\204\206n?\3700\001>\220F\000?\\,8?\244\235w? \230\263=z\036S?\010\037Q>\022\372P?f\300(?\224\275P?T\211\007?\370\206\024>\234\210_?X\024\347>\352\330\024?\354\357\262>\200[x<\024\335\033?\330\310H?pt\017>d\336\300>t/\275>\300\0203?X[\235>\300\202\022=\"\006]?\036u\027?\326\244\021?x\366\224>Z\346k?\206iD?\n\244G?\324\366??\320#\255>\372\025A?.S\\?\260\300\013?r\304)?\326\233\027?Z\227o?@\353Y?@\231\337=\224\237\375>\314X\350>8\326p?\226\235m?\250n\267>d\224\220>\360\275^>|\027m?\004\234]? \366\024? {\237>\236?\036?Xy\252>t\354\006?\350\216\370>\010\222(?\232\371+?\300\033\240>\0344=?\310\243h?\372\215\\?\000\232\230>\370\272\213>\320pC?\320\312S>\214\271\316>\2766\n?,$#?p\272\220>\022&3?<\033\002?\300\244\243=X\254\353>>\232V?\356S\002?\370\013\031?\200\377[<x\023\010>P\016\371>\000kI<&\037\036?\250\020h?\010\316\030>\016ry?\200nP<\224\361\356>\346\342N?\254I\261>\274\226\311>\342~\t?<\222\243>d\315D?\034\372\200>\000 \366:@\322\343=Vyj?Z\033\002?X:j>\310l8>\260\272\220>\250=%>\300$\212<\300\270}?\240:\211=@G\262>\0028f?\350\265M?,\273c?\204\312u?\004\\\n?\334\276\217>\344\313\256>\244E\231>\240\237\342>\312\333\n?\256z\033?0\255\272>`\245\372>\2302\357>\214\371K?\352\204j?\200\212\267<\220BK?\230\306<?x\2118>\334nT?\360?\023>\334\243\312>\240A\337=`\247\004? %\242>\266\210S?\266\360*?@\304N>\340\030\014>8\3167>\304\022\031?\300\362R=\336\327,?<f\234>\216\235\"?fz#?\210D\324>\010\226L?\272\353K?<} ?@\325\017=\030 X?\310nE>\340\373\371><\030\016?\344\310t?b\240O?\\vz?\000\262\260<\336\371`?\272=y? \346\361>\034jg? 2t=\234B,?\320\033^>p\242\037?\024%\207>\006;l?n\354 ?@@O=\334w{?\260\201[?\360M[?`\252N?2\247\035? \322p>\030\336\314>\220}\214>4\355q?\010\321\032?\366\352[?\004]$?\306\343,?\272G\006?\334\222(?\320\003\220>(H~?\344\367\010?\200\301\013> \0263?\000\354\261=X\210\345>|\226>?\260\241\256=x\036\316>\250\222d>\210s\231>\240\237\212>\360\260\314>\360\336\241=\320\260\367=\342\264J?bBc?J\374\003?\020\2149>p\315\036?`\372p=\000\362\274>\264\007a?\270L\274>\024@\371>\342\035>?*Fm?\3662\034?\210l\'?\200\'Z>0Q\344=\030\202O?\244\371j?p\336\313=\200\023\376>&\315$?\274\274\207>\014\274+?\200\023s<\226\217\'?\360\272:?\000\310\344<\224\034\273>&\032\006?\244\020r? \303\363=\252\253:?l|\005?\034\325\211>p\203\032>rl\001?\320jP>\000)G?@\300\303<\364\364n?\032}`?"
      }
    }
  }
}
node {
  name: "filter2/read"
  op: "Identity"
  input: "filter2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter2"
      }
    }
  }
}
node {
  name: "convolution/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "atrous_one/BatchToSpaceND"
  input: "convolution/SpaceToBatchND/block_shape"
  input: "convolution/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "convolution"
  op: "Conv2D"
  input: "convolution/SpaceToBatchND"
  input: "filter2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convolution/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "convolution"
  input: "convolution/BatchToSpaceND/block_shape"
  input: "convolution/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output"
  op: "Identity"
  input: "convolution/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
