node {
  name: "in_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
        }
        tensor_content: "h\261d\252\301T\372\277\233\346R\032\371\230\336?\246\305T\207I\273\306?Z\244\246Z\365\206\343?mG\255\2474\266\364\277\017j\226\252\211\016\342\277B\363M\225=l\371?\226+\254.\216n\321\277\236dz\275_c\340\277Y\306sw\016\326\371?N\220\327?\234\037\351?\376_Yq\2209\361\277\305\306\271_I\311\356\277\031IS+c\331\355\277\030\251\026\320y\225\321?{I\221~0^\343?\"\262\036&8\302\355?\030\241\006\351Q\234\322\277\365Y\246\202\233\365\376?b\232g\375\303\234\301\277\216\207\370\r,\356\335\277k\360\025\325\270\244\343\277\206c=M\333\356\325\277\361J\306&\365\333\342\277\301\361\005\366\2562\360?00\326b\022\214\373\277\374\000E\370~1\360?\311II\342P\000\360\277\004\304#\227\361\375\372?wN\371\027\345\"\341\277\257\365 \237Ho\340\277\350\253Os\377\030\364\277\207[\221t\322)\340?\312\322\365\276\343\321\343?\322kS\310\360\363\365?\250(\214\366$V\350\277\257\211:\302Z\251\365\277\305\345~n\335\023\352\277\036{\361\353\210\211\344\277\254\273\374\013HC\366?i\247}0\0301\005@\032\020\004FB]\345\277\230U\317\322\233\372\317\277i9])]\254\360?^\360\356\355A\324\353?\251\034\n\352\022\275\357\277\334\027`\036\375\365\366\277\261\3313\037R@\347\277\277f\r\372\201b\327\277\356\275\323\340\004\361\325?eG5\326\374\205\352?\363\334\206\324R\352\322?\321\336U u\366\366\277{#\321\266,/\340?\025\371.\027\320+\271?\236\t\301\356\274\327\324\277\371\003/\324\3064\363?\017cF\357~n\000@\21797\345\225~\353?{?8\365\255\242\001\300\301X\030\313t?\350\277\326\247\006\325\022\025\365?O\016\016S\267u\002\300\331\206f\003\360\327\340\277"
      }
    }
  }
}
node {
  name: "in_0/read"
  op: "Identity"
  input: "in_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_0"
      }
    }
  }
}
node {
  name: "in_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "in_1/read"
  op: "Identity"
  input: "in_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_1"
      }
    }
  }
}
node {
  name: "random_crop/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "random_crop/GreaterEqual"
  op: "GreaterEqual"
  input: "random_crop/Shape"
  input: "in_1/read"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "random_crop/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "random_crop/All"
  op: "All"
  input: "random_crop/GreaterEqual"
  input: "random_crop/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "random_crop/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Need value.shape >= size, got "
      }
    }
  }
}
node {
  name: "random_crop/Assert/Assert"
  op: "Assert"
  input: "random_crop/All"
  input: "random_crop/Assert/Assert/data_0"
  input: "random_crop/Shape"
  input: "in_1/read"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 1000
    }
  }
}
node {
  name: "random_crop/control_dependency"
  op: "Identity"
  input: "random_crop/Shape"
  input: "^random_crop/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@random_crop/Shape"
      }
    }
  }
}
node {
  name: "random_crop/sub"
  op: "Sub"
  input: "random_crop/control_dependency"
  input: "in_1/read"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "random_crop/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "random_crop/add"
  op: "AddV2"
  input: "random_crop/sub"
  input: "random_crop/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "random_crop/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "random_crop/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "random_crop/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2147483647
      }
    }
  }
}
node {
  name: "random_crop/random_uniform"
  op: "RandomUniformInt"
  input: "random_crop/Shape_1"
  input: "random_crop/random_uniform/min"
  input: "random_crop/random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 30
    }
  }
}
node {
  name: "random_crop/mod"
  op: "FloorMod"
  input: "random_crop/random_uniform"
  input: "random_crop/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "random_crop"
  op: "Slice"
  input: "in_0/read"
  input: "random_crop/mod"
  input: "in_1/read"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
library {
}
