node {
  name: "in_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "~^G?L\033M?\236p9?\220ol>\356%:?X\2708><q\001?b|d?\224\316\013?\314al?P@\257=,5K?\326\271(?\3566\016?`u#>0\024\236>\240{\036>\240h\360>\222o~?v|\034?\346+-?HM8>v\312,?p\375e>@\235P=\030\216\353>$\024T?\250\004q>H\250y?h\014V?(W\204>\014t\326>\016\3503?\366\226D? \213\t?\24019?D\300\211>\0008\312;\340\310\005=0\374\203=\\\302W?\300\325??\200\206\232=\270\337\037?\220\272\262>\256L\024?\266\256\022?\300\214:>\262Z$?\240\020j?\350\225\232>\304\372\266>\020\204.>\"\350V?8\370\013?\320W\230=\202\256f?\222N(?\200!\323>`Zz>8|\331>6\231\005?\n\3721?\240\345\372>H\001]>\006ut?\330\357\r>(\033\036>ZY\t?\200\002\\<\310\'\325>\350$\025> ]\322>h_~>\030{\252>D?\230>l\344)?\270\376\302>\212\314]?H!B>F\304@?\336\2618?\346A)?\330\037:?z\005\022?\354{\210>4\315>?\000\3675=\370\317\232>\344U\370>rUL?\200\260\305=\302\306H?\366\353\001?P\347\254=^CV?\2449\034?\254\267\353>~\326\033?\264\000\\?@t\353>\244\341+?\324\202\214>\320\336J>\264\033\324>\322:H?|s\263>V\010\001?p\233\361=$\253T?\320\006:>Z\035X?\204\343\001?x\353\344>\220\261\002?F\246*?l\345\203>h\253o>r\033.? \303\207>z\024\n?\220\032\360>\216W\035?\300\340\367=\214\343\203>\360\220\235=,\267\355>(\267&>\000wO>\2146\301>\240.O=\264>\261>\264o\022?P\264\253=\364}\330>\340\363p=zB\t?\034\203\363>\240\217\201>@\0076>p\275\231=F\316e?x\304\272>\334\353\234>D\235\362>6\2163?`\001\345>\306b\004?X\2242>\210\213\262>\316\243F?\212\372r?\310\037T> k_>^\350&?DN\236>\362Vt?P\236@>\3645u?\200\3026>\014\256v?\004N\367>\244)(?\360\245\253>V\356\177?RB\026?\032\036\023?\200\373\302<\340\257\226>\276X\006?,\177\026?H\003:?0@I>\374\251j?\310\374x?\\\256k?@{T=\020m\231>\000\254};\356\343C?\364\277\014?\334A\302>4\036\302>H\241\264>\034\037\223>\270\347N?`J\362>\014?\341>p\036)?\274a\031?\000\350_;\360\216\371>P\"!?\270\0011?\2404\030=V\255\030?\2401\035=h\253\026?\300\273*=\262T4?J\254|?\264Hv?\034\031\357>\322\212\017?\344]p?\270\256\276>\200ea=\210%\004?\350H\257>ZL#?\260\252\364=`R\004?\256q\017?\020\274\270>\224\222\001?x.\252>\244\361\037?\364C\354>,I\327>\274^\023?\024\022\037?\246?3?\320\221\244=\240\207#>\314\306\211>\3006r?D\0364?\314:\021?T\t??L\351R?\000\271\226;\000vK>V\223#?\034^\322>D\2576?\346\231\017?\264\0200?8\244o?\000\tE?4LX?\214`\302>\224\331\240>\254g\355>\310@\270>\360\302\274=\220\322\225=\320E\340=\030\375\033>|\001\020?h\315m?"
      }
    }
  }
}
node {
  name: "in_0/read"
  op: "Identity"
  input: "in_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_0"
      }
    }
  }
}
node {
  name: "conv3d_transpose/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 3
          }
          dim {
            size: 5
          }
        }
        tensor_content: "\222d*>\2357\206>\341\354\227>`\254\"\274\030\276\263=\\\177\202=0G\274=\226\304#>\314[#>j\374\203\275y\333\214>F\303a>@`4>F^w>0\233\265\274LA\007>`}\351\274>\227?>\365\260\217>\300g\223<f;Q>b\217\231\276`\251|\275\016\032Z\276\312\374\264\275L\244T\276@\334?\274r\nU\276x\333e\275\'\315\207>\356\014\205\276\340K7=\005\017\207>`aO\274\256K\276\275A\036\217>\362o\210\276\022\254\307\275\367\353u\276\374\220k\276\026\026O>\026\322k>\2026\265\275n\375x\276\354\306\325\275\214\373>\276\016\321z>\006\363\326\275\032\246\n\276Hi\006\275\033:\222>5D\003\276\245\021\216>L\341\345\275%\342\224>\314\272i\276\3405\003<\224Y\276\275\264?\247\275\320\010\007\275\3462>>\346\356S\276\312\347u>\022\302 >\300\200\303\274\361\3173\276\250z\016\275\3106\311=\022\345=>\177\022\214>\366\303\327\275l;\254=\003\274\205>\230v\215\275I\231\222\276\271\026\205>\215\261\217>d\033\001>\000\311\222;Z\242O><\003\364=\200 :\273KU\222\276~t?>`\341\227\276\360\\-=G\330f\276\320\000\353\275u\244\223>~\364B\276\242j\310\275<\320\231=\036\303\'>\244\020\000\276\030.?\275\300\307\305<xvF\2752\304f>Of\207>\335\263\205>4V\226\276k\351\207>\330ZY=T\227#>d\303\245=\320\315@\276\\\"o\276\234\3022> \232\356=4\333\203\276G5\215>\302[\243\275V\027\017\276\03078> \024e<\000\356<\276^\221P\276M\325g\276\204\261\366\275\210\365\357\275"
      }
    }
  }
}
node {
  name: "conv3d_transpose/kernel/read"
  op: "Identity"
  input: "conv3d_transpose/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3d_transpose/kernel"
      }
    }
  }
}
node {
  name: "conv3d_transpose/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv3d_transpose/bias/read"
  op: "Identity"
  input: "conv3d_transpose/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3d_transpose/bias"
      }
    }
  }
}
node {
  name: "conv3d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\005\000\000\000\005\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice"
  op: "StridedSlice"
  input: "conv3d_transpose/Shape"
  input: "conv3d_transpose/strided_slice/stack"
  input: "conv3d_transpose/strided_slice/stack_1"
  input: "conv3d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "conv3d_transpose/Shape"
  input: "conv3d_transpose/strided_slice_1/stack"
  input: "conv3d_transpose/strided_slice_1/stack_1"
  input: "conv3d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "conv3d_transpose/Shape"
  input: "conv3d_transpose/strided_slice_2/stack"
  input: "conv3d_transpose/strided_slice_2/stack_1"
  input: "conv3d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/strided_slice_3"
  op: "StridedSlice"
  input: "conv3d_transpose/Shape"
  input: "conv3d_transpose/strided_slice_3/stack"
  input: "conv3d_transpose/strided_slice_3/stack_1"
  input: "conv3d_transpose/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/mul"
  op: "Mul"
  input: "conv3d_transpose/strided_slice_1"
  input: "conv3d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/mul_1"
  op: "Mul"
  input: "conv3d_transpose/strided_slice_2"
  input: "conv3d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3d_transpose/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/mul_2"
  op: "Mul"
  input: "conv3d_transpose/strided_slice_3"
  input: "conv3d_transpose/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3d_transpose/stack"
  op: "Pack"
  input: "conv3d_transpose/strided_slice"
  input: "conv3d_transpose/stack/1"
  input: "conv3d_transpose/mul"
  input: "conv3d_transpose/mul_1"
  input: "conv3d_transpose/mul_2"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3d_transpose/conv3d_transpose"
  op: "Conv3DBackpropInputV2"
  input: "conv3d_transpose/stack"
  input: "conv3d_transpose/kernel/read"
  input: "in_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCDHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv3d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "conv3d_transpose/conv3d_transpose"
  input: "conv3d_transpose/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "conv3d_transpose/Elu"
  op: "Elu"
  input: "conv3d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
