node {
  name: "image"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 28
        }
        dim {
          size: 28
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "filterW1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\215\306\206?e\274d\277\013\334\236>\331m\235?\235\027!\277<\266\021?\026\022\316\277\325\003\215?\226\365N\277\350\014\232=9y\224\277\013\232B?\223\026\315\276\313\230\225\277\253\361i\277\377\347\273\276Ku\351?\330K\227\277\364 \004?)\277l\277p\236\276\275\371\034\r\277 \037\236?)=\216\277\214\020n\275D}.?\'\3660?(rE\277\206\264\336\275c\\]?dw\250\277N\306\252>,\327\333\277\260\0320>o\023\205\277\340\207\215?\316w\230\277\034\214\206?\242);>QJ\213?^\3178\277\021D\341\275\350X\310?\263k\265\276X\032\217\277\347\242\260>\202e&?Ee\322\277T\tm?C\004\364\276=f\373>]\341\037\276f\310\274?=\035\337>&\201\014@\357\356U\277\317\366\233\277{\323M?d\274\222?\247\354\201\277\222\263\036\277d\224\362\276\025s]?\237\376\212>\217\320\275>JML\276\032\253J?\370\375\255\276\237\312>>\t\t\306\277-\242\314>!_s?\327\002\220?\377\343]\277\227<\215\277\3425\025@Q\013\216?Y\3156?kk\332?\277@\347?a;\030?D\006\313\276\371$\'\300\2377\223\277\217{\231\277m\356\325>e\301h\276d\345\240>\307\353\025\277\231~\317\275\301\270Y\277Eb&\300\273@\234?\304\243\005\300\177HF\276\ni\243\2772w\335\274\354\331\212?X\262\'\277\301\272\353>\342q\014\276X\334?\277e\2500\277\035\351\245\277\006w\"\2762\335\261?,\364f?\325\352\247\277?J\032\276\335\204!\277\373{q\275[\351\207>$/\226>\261g\333>Q^9?\336\341\003>\371\026\267?\347\274/?=\224\014@\321\316\004?ld\032\275\236]\007?$\216^\276\300\214\221?\274\014\027\277z\353\305?\255d&\277w%\204\277 \320I>\374\303/?\234\3425?y\270\306\277Vt\261\277\276\320\245>\267\360O?]\263D>i\214k\276]\345\"\277\256\260\202?[\177\'?\35220\276W%\214?c\336\203?G\247t\277\241\215\233\275V7\276\277\210\227$@\003x\340\277\237\207\220?\256tx?%0\222\276\216\253\020?\322\261K\277k\335\232=p\253\202\277\tc\207?\206\352\240\277vG\327>\353\272$\300I/x?\036\255\206?[\377\'?\024%\245\277\373=$?Ah\317\276\262N\'\277C\323\330>n\250\253\277\032\363r=r\032\013\277\311`t?\352\355\313?c\177\343\276\302\242\254\276\217\260K?\333I\000?\266\310c\276\030p\342?\232\356e\277\2438\352?\231\3654>!\245N?\213\217\251?\255\321\311>\025\347r\276x\314w?\244\001\203\277^\274]\277\357d\312\277\362\260\300\276\343m\024<\277\026\232<\351\374\340?W\313$\277=\327\273>\302Y\">3\016-\277w\212\t?\204\315\231\277\364\212\344\277\304\372v?\214])\277\333h\325\276\343\264y\277z\376\026@\261\201\244>m\320\210?\'\225\261?u\270<\277q\260\345=\356;\010@\2310\302\276Pd\016?S\360\214\277\243{\246\274]\207\227>\032/\313?\277\270\236?\023\340*\277\217\252N?\277\227\330\275\262\020\204\277\363]\347?\346\265\335=\3729\r@"
      }
    }
  }
}
node {
  name: "filterW1/read"
  op: "Identity"
  input: "filterW1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filterW1"
      }
    }
  }
}
node {
  name: "conv2d1"
  op: "Conv2D"
  input: "image"
  input: "filterW1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "avg_pool2"
  op: "AvgPool"
  input: "conv2d1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "filterW3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\371\241Y\276\201\372\361>#`\334\276\332\207\025?\330\266\027?)\026\003?\252\034\271\277<^c?\234\317\330>w\244\262\277\324\245\346>\274\304\001\300\210\325\375=\000(\376>l\022\373?\253\001i\277\265\275\206?\275\334Q\277\"\310W?\273\326\232\277\005\"\337\277\037\375\364\277\226\225\201?(\275[?\352\363\216\277$\305n?\033i\276\277\275\224\202?\327_T?Bp\177\277\035L\014\276\357b\r?\225\237G?R\010q?\037A\275?9\260)@\022\221\007=\340\004E>\017\017\210<\320\251\002?Re\237?\371\316\337>9\006\023\276}:o\277\230\321\234?\217\215\341<L\357\351?\312?\201?v?\207\277\363\272\312=r\036L\277O\312\327?\301\304\327\277\336\270\246?Jp\022\277q\307T\275\277l\t\276\200\326\235=W\204\n\277\353C\260>f\225\244?A\304\213\27738\215?\230/\212?\331\331\267\276\212T\002?3D\262>\251\327\313?\234\361/?\312\372\026?q\262N\276\026\350\260<8\037\213>\250c\224>\317!9?\240y\354\276|V\233>\341Z\302\277\215G\020\277\233m^\275\000FN?\23769\277f\216I>]|x\277q\242\t\300\220\035\236\276\216nN?*\\\000?\352\320n?\317@\217>\221\210\376\276t\246\020>\330\375\247\276\036\257\223\2774}\022\276\202\347\330>Z\204x?\236\370\247\277~\266\271>,\352Q?\\\277\347\277\261\3028\277\031\202\234\276m\263\236\276DJ\310<O?d\277\251hn?\240\216\301\277\34279\277f^\226>5\013\331\276_U\311?\"jP\276\021\200\321?\340\275\r>\354\301\241?,:\260?\350:\201>\216\352\241>\273\375\346\2779{\352\277Md\037\277\357\277[\277\005\204j\277\353\r\000>i\351g?\010\336\004\300\374\257B\277\"\262[\277DZ\016?&M\240\275Y\276\200>L\375\204?t\376\037@\'o\315\277\226?\321>\001\334e?\024$<>\004I\246\277\023\034\313>\313a\200\277\336%\336\276F\307,\277\316\300\307\275\004\215\312?1S\000@W\225\207\277J\217\217>\224\263:@7\363\357\275\313q,\276d\3401\2776>\354\276H\375\034\277\373\310\n\2769\240\n\300\377\226\246\2762\254f\277\362\215D?\000\212\327\277\023*\231>\315V2?`\251G?\2217\222\276\321\014E?\210\276\200?a\373\213\276#n \277\204{\021?\326\343\037\277q\252\032\277\315bT?\024G\235?B\314@=\347\362\261>\305\231\323>\331\224C?\335]\244?\024\356|? \036$\277\223\306\014?\224P4>A\242\232\276Ky\271\276\240\013S?\235\004\005?)>\256\277\277A\334\276\004f\245>A\234\003\276A\027\033=Pw\377>\316}\345>\021\207e@3\326O\277%\336\234=sy\264<g\220\357>Pl\212?\340\262\300>\202\007\n>$N\217?z\221\213\277\257\251^\276\n\240\275>\352^\344?3e\375=\177\361U?\376}\252\276\307\346v\277A\017\355\276\274j\323?/Xv=\n\3641?\254c\247<dh\005?~\0054\277\001~\344\277\214\317\211\274\204|\323\276\347;\304?\262!\215\277\362\350c\277\273\375\016?\022R\243\276"
      }
    }
  }
}
node {
  name: "filterW3/read"
  op: "Identity"
  input: "filterW3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filterW3"
      }
    }
  }
}
node {
  name: "conv2d3"
  op: "Conv2D"
  input: "avg_pool2"
  input: "filterW3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "max_pool4"
  op: "MaxPool"
  input: "conv2d3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "max_pool4"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\300\377\036=ja\r?\330\306\336>\036?|?\026\366K?\312z[?"
      }
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "output"
  op: "MatMul"
  input: "Reshape"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
library {
}
