node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Variable"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\363\360xk\225\333\370?\240{\024r\366\024\375\277|e\211\256\352;\371\277\026\372\365\3170\t\350\277\345\024N\366\375\371\330?m\257}\374\330\376\372?"
      }
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "o\032\334\203\370~\364\277\334\005\014\276\007C\342?"
      }
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 6
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "unstack"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/BasicLSTMCellZeroState/Const"
  input: "rnn/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/BasicLSTMCellZeroState/concat"
  input: "rnn/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/BasicLSTMCellZeroState/Const_2"
  input: "rnn/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/BasicLSTMCellZeroState/concat_1"
  input: "rnn/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 12
          }
        }
        tensor_content: "\324\306\013\3039A\333\277a\001yE\353@\310\277\374\032(\232 \306\336?R\004\2048\322\336\331\277\346m\345\227\374\016\215?\030\345\354qT\016\270\277v\215\2168\351\216\323\277\262biO\177\342\306\277L\272\r\362\310\367\243?\236\025\t\364\264\207\271?\351\000\214\226_X\327\277\204\203\010\346\345g\340\277E\003\336Rf\013\340\277\t\037\014k\210\016\303\277.\357}u \337\336?mP\221\025hD\304?Z\316\313\221\234g\260\277\304\220\376\377\344\356\327?:\34463\276\021\317\277\216\366\2106\334\360\304?w\2539\343\356>\277?0t\026t\362x\327\277\230\257l\347(\336\310\277RE\r\217\333\357\300?>\210\273y\257B\340\277\341(yPG\377\276?\037\351\214Q\357y\323?\361LE\301\375\305\326\277kA\007\311\022\004\332\2777\016\264M+\200\336?\256\225!)\026\023\273?\216\205\237\347\024\206\341\277Od\t*\310\323\340?\225\017`x\210\355\326?\314\230\236\014t\201\337\277Cu\213\203\rE\230?\325s:w^\367\276\277\211\274\033\334(\353\302?Y\244Cp:U\310?k\006Q\232\335\355\335\277\213A\021\303]\217\245\277\361\240\264\202\034j\320?\037\344Y?\352\372\341\277\236\022H\214\232\224\335\277\262N\260u\3302\321\277\307\342br\251\201\333\277\027\333\234\221l\243\340\277\366QF\361e\214\323?\017\374\005-\265\343\342\277\356\210\022<\332\316\340?08\025\230\2736\327?X`\367\265\\\003\300?h\205\'\374]\316\334?B\014S\211\222\243\302?\203\"0H\203f\336?\201\233\230n\350\235\300\277\371\343\016\325\201\026\342?\205\361\275R\371\253\323?.\223\251Wy\335\337?\243\203m\020\230\236\307?"
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 12
          }
        }
        tensor_content: "\"\\o\300/\031Q\277\331mG\320/W\"\277j\265\273\351\235o\035\277}\023/LK\342\223?\203\327[>\237p\225\277\306\362^\013\252\252p\277I\370zH\177\333K\277_\354\3568\2366\363\276\357\217\266\344bC\020\277M\nH\261\016\355N\277`ul.\021\002#\277\351\240\2343\221\270#\277"
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/basic_lstm_cell/split/split_dim"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/split:2"
  input: "rnn/rnn/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/mul"
  input: "rnn/rnn/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/basic_lstm_cell/mul_2"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/basic_lstm_cell/split_1/split_dim"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_2"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/basic_lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/add_1"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_3"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/mul_3"
  input: "rnn/rnn/basic_lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/basic_lstm_cell/mul_5"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/basic_lstm_cell/split_2/split_dim"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_4"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/basic_lstm_cell/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/add_3"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_5"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/mul_6"
  input: "rnn/rnn/basic_lstm_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/basic_lstm_cell/mul_8"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/basic_lstm_cell/split_3/split_dim"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_6"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/basic_lstm_cell/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/add_5"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_7"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/mul_9"
  input: "rnn/rnn/basic_lstm_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/basic_lstm_cell/mul_11"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_4/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/basic_lstm_cell/split_4/split_dim"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_8"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/basic_lstm_cell/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_12"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/add_7"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_13"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_9"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/mul_12"
  input: "rnn/rnn/basic_lstm_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/add_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_14"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/basic_lstm_cell/mul_14"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_5/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/basic_lstm_cell/split_5/split_dim"
  input: "rnn/rnn/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_10"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/basic_lstm_cell/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/add_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_15"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/add_9"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_16"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/add_11"
  op: "Add"
  input: "rnn/rnn/basic_lstm_cell/mul_15"
  input: "rnn/rnn/basic_lstm_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/basic_lstm_cell/add_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/basic_lstm_cell/mul_17"
  op: "Mul"
  input: "rnn/rnn/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "rnn/rnn/basic_lstm_cell/mul_17"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "output"
  op: "Identity"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
library {
}
