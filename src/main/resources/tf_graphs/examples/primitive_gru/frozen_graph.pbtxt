node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Variable"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\027\351\354\t\376\354\307?\252h\221\177 \355\341\277\206\320\330\351\266\213\371?4\016bn\323\177\336?\273\212\274\207\034\341\375\277\316@GU[\225\343?"
      }
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\207\n\005\346Q\010\364?\020\331\020\3677\366\331\277"
      }
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 6
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "unstack"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/GRUCellZeroState/ExpandDims"
  input: "rnn/GRUCellZeroState/Const"
  input: "rnn/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/zeros"
  op: "Fill"
  input: "rnn/GRUCellZeroState/concat"
  input: "rnn/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "+k\260\006\304\261\333\277\257\204\022\244$\244\314\277\005\r\211~\371\240\320?\375\214\332|~i\324\277M/\203A\343B\304\277\250m\021\343[\020\325\277\2613\313\036\266\004\206\277X\337qJ\352\347\304?\355\210\236HZ$\342?\\\307\031\300y\r\344?K7D\241\255P\326\277\0301\246\224>\370\325\277\007\035\016U\237U\346?\224\277Q(3F\274\277\341\265\330u\203p\344\277\021/\020\301>\312\340?\370\373\2254\356\246\337\277f$\3127\016&\267?G?\263\214\260\337\325?\270k\311C\375_\332\277\232\223\241\223\373e\347?a\037\037\247\336\363\342?\347\3658q`b\324\277{5\276o\236S\322?\215\332e\005g\204\306\277\001\003,\006\220\240\345\277u.16\220u\340\277\005\021X\0167\217\266?\371<\245\355c\\\243?\233\024\255+\306{\341?"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/GRUCellZeroState/zeros"
  input: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "m\332o \230\364\357?\331\177:\017\341[\360?\002L\255\345\377G\357?\372\313\303\332\360\027\361?\037u\346\351\025c\357?N\207H\347\341\377\356?"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates/split/split_dim"
  input: "rnn/rnn/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\332\336\003\374\326\314\334?\236\357\275]\2575\351?\274[dO>\014\360?r\005\213\030\274\341\316?\335\242)\0107\352\331?%L\354\2538\211\334\277(\224\243\n\362\240\340?\304\234\356\200m\373\354\277\341h\0311\t\335\345\277\350\234\303\335@:\304?\r@\034\326I\242\336\277\334\335\254\026\372\273\351?x\035N\213\247\212\327?\344\002`\344\244\315\200\277H\307j\225\256v\307\277"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/rnn/gru_cell/candidate/mul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\263\306*\320\310L\351\277p\366{\306;\262\274\277\360\225\030\t\"\303\350?"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split:1"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub/x"
  input: "rnn/rnn/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub"
  input: "rnn/rnn/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul"
  input: "rnn/rnn/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/gru_cell/add"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_1/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/gru_cell/candidate_1/mul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_1"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_1/x"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_1"
  input: "rnn/rnn/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_1"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_2"
  input: "rnn/rnn/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/gru_cell/add_1"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_2/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/gru_cell/candidate_2/mul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_2"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_2/x"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_2"
  input: "rnn/rnn/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_2"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_4"
  input: "rnn/rnn/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/gru_cell/add_2"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_3/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/gru_cell/candidate_3/mul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_3"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_3/x"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_3"
  input: "rnn/rnn/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_3"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_6"
  input: "rnn/rnn/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/gru_cell/add_3"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_4/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_4/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/gru_cell/candidate_4/mul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_4"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_4/x"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_4"
  input: "rnn/rnn/gru_cell/candidate_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_4"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_8"
  input: "rnn/rnn/gru_cell/mul_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/gru_cell/add_4"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_5/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_5/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/gru_cell/candidate_5/mul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_5"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_5/x"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_5"
  input: "rnn/rnn/gru_cell/candidate_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_5"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_10"
  input: "rnn/rnn/gru_cell/mul_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/add_5"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "output"
  op: "Identity"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
library {
}
