node {
  name: "in_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
        tensor_content: "~^G?L\033M?\236p9?\220ol>\356%:?X\2708><q\001?b|d?\224\316\013?\314al?P@\257=,5K?\326\271(?\3566\016?`u#>0\024\236>\240{\036>\240h\360>\222o~?v|\034?"
      }
    }
  }
}
node {
  name: "in_0/read"
  op: "Identity"
  input: "in_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_0"
      }
    }
  }
}
node {
  name: "in_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\006\220E?\202\226m?\346\013|?"
      }
    }
  }
}
node {
  name: "in_1/read"
  op: "Identity"
  input: "in_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_1"
      }
    }
  }
}
node {
  name: "in_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\270\263q?\342~\030?\026\355]?"
      }
    }
  }
}
node {
  name: "in_2/read"
  op: "Identity"
  input: "in_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_2"
      }
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "in_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
        }
        tensor_content: "<\315\315\275\200uH\276\002\221\320>z!\236\276\\Af\276\2444\360\276v\360\t?\020/t>\200\006\034>\010\261\231\275`\343k\275\222\237\006?\372\274]\276\200  \275*Nn\276\240\201\334<8\241\223\276v\335\226\276\236#\217>0\034\240=\204\326\036>p!R>\370\377\365>\000\365!<\334i\021\276>\021\024\276\216\223\310>\252[\352\276$\363\351\275$\366U\276H\262\376\276\300\346\214\275\030\323Y\275\340r\234>\000x\221\276 \215L=.\260K\2760i\270>\026\013\306>\355\235\232\276\000G\273<\272\310\326>\\=\267\275\024\005\375>\220\200|\275d\263\333\276\270Ug>\314\241\372>Tw\201\276`\017V=\270\'\026\276\032\034\215>\024\262\376>\331f\370\276xm\213>b\264z\2764\017g>\210\023\235=\234\273\366\276\020\260@=X\347}\275v\365\242\276\274\004.>V=\276>J\373\300>\020M\270\276\357\010\322\2764W\351>,J\352\276\206\244\250>\326\277\240\276\310\233\325\276\216\242\010?\340$&=:w\343>\3443\224>2\274\225><\017Q>M\n\217\276py\254\276\200\321\215\276\312\353\261\276d\257;>\236\366\201>\324Cz\276\"\257\275>\004Z\303\275\232\352\311\276\032>\301>\330,,>\014\344\304>i\336\305\276\264\346\341>4\200\366>:C\255\276\010\260k\275"
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "in_2/read"
  input: "rnn/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/basic_lstm_cell/concat"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/basic_lstm_cell/MatMul"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/basic_lstm_cell/Const"
  input: "rnn/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/basic_lstm_cell/split:2"
  input: "rnn/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul"
  op: "Mul"
  input: "in_1/read"
  input: "rnn/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_1"
  input: "rnn/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/basic_lstm_cell/Mul"
  input: "rnn/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_3"
  input: "rnn/basic_lstm_cell/Sigmoid_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/basic_lstm_cell/Mul_2"
  input: "rnn/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/basic_lstm_cell/concat_1"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/basic_lstm_cell/MatMul_1"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/basic_lstm_cell/Const_3"
  input: "rnn/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/basic_lstm_cell/split_1:2"
  input: "rnn/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Add_1"
  input: "rnn/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_6"
  input: "rnn/basic_lstm_cell/Sigmoid_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/basic_lstm_cell/Mul_3"
  input: "rnn/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_8"
  input: "rnn/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/basic_lstm_cell/Mul_5"
  input: "rnn/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/basic_lstm_cell/concat_2"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/basic_lstm_cell/MatMul_2"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/basic_lstm_cell/Const_6"
  input: "rnn/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/basic_lstm_cell/split_2:2"
  input: "rnn/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Add_3"
  input: "rnn/basic_lstm_cell/Sigmoid_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_11"
  input: "rnn/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/basic_lstm_cell/Mul_6"
  input: "rnn/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_13"
  input: "rnn/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/basic_lstm_cell/Mul_8"
  input: "rnn/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/basic_lstm_cell/concat_3"
  input: "rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/basic_lstm_cell/MatMul_3"
  input: "rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/basic_lstm_cell/Const_9"
  input: "rnn/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/basic_lstm_cell/split_3:2"
  input: "rnn/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Add_5"
  input: "rnn/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_16"
  input: "rnn/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/basic_lstm_cell/Mul_9"
  input: "rnn/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/basic_lstm_cell/Sigmoid_18"
  input: "rnn/basic_lstm_cell/Sigmoid_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "rnn/basic_lstm_cell/Mul_2"
  input: "rnn/basic_lstm_cell/Mul_5"
  input: "rnn/basic_lstm_cell/Mul_8"
  input: "rnn/basic_lstm_cell/Mul_11"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "rnn/basic_lstm_cell/Add_7"
  input: "rnn/basic_lstm_cell/Mul_11"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
library {
}
