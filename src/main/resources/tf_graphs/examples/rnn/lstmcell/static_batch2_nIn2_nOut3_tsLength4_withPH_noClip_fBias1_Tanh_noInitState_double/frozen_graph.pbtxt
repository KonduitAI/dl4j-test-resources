node {
  name: "in_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "0m4\347\376y\315?\344\033;\004\236p\351?\026..t\357%\352? \306G>\322\023\247?\230\303\330E)\235\327?,5\313k\013\350\345?\334m\034\311\255s\321?0\024\236\222\260\272\321?@\321\340\331\240{\316?v|\234\234\223o\356?\244&\\\214\314W\332?\270\376rL\357\224\331?\030\216\353R\253\023\332?*A<\365%\024\344?h\014\326CH\250\351?0\320Y{\256\\\261?"
      }
    }
  }
}
node {
  name: "in_0/read"
  op: "Identity"
  input: "in_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@in_0"
      }
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "in_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/LSTMCellZeroState/Const"
  input: "rnn/LSTMCellZeroState/Const_1"
  input: "rnn/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/LSTMCellZeroState/concat"
  input: "rnn/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/LSTMCellZeroState/Const_4"
  input: "rnn/LSTMCellZeroState/Const_5"
  input: "rnn/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/LSTMCellZeroState/concat_1"
  input: "rnn/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 12
          }
        }
        tensor_content: "\302p\334\320S\255\306\277\360\374\252\300\266\221\323?\330\317On\014\345\333\277\352\023J\036\200^\337?\"\334\237m:8\334\277\370,\266G\250q\331\277\235\035\311\333\374~\321\277*@\321,1\366\321\277\247<=Da\231\323\277\032+\357tZ=\334\277\204-\0051f\025\306?\030\006\3226v\014\314\277\020\360\234\247\327\265\263\277\342;\211\270\007\001\327\277\314\"\001\272\302\272\325?\036\232\275I\307\213\323?l\302~\031\236\306\325?\305(\242_E\374\342?@\324H\2263\340\224?\362\236eW\037\226\321?:\247\217\3620\223\332?%\351-\312\260^\342\277@\204\327\036\370G\321?\362\272\302\331B\373\330\277`\264#\365\256\030\307?|\200A`\362S\317?p\200\027\347C\234\265\277Q\215\224@^:\342\277 \325\207\037H|\223?\000\267\324\260\226\005\253\277\274\250c\361j\177\277\277F9\314\333\2432\337?\313mIi\306\266\324\277\237;\371\247P\215\341\277\314\234\235+\250\035\273\277V\247\317\200\234\261\337?\020ET\224\003\020\262\277\030X\335\013D\207\315\277\"\353\013L`\004\335\277\202\\\353\335|v\325\277\302P{\035t\322\333?T\361\025\234\033\264\325?p%\004s\014\327\334\277D_ptZ\255\270\277\2064f-\227\341\332\277\300Y\353\330\232\010\301\277\272CY\0251\376\330\277\340\263\316\340\311n\265?,\310\252\274\211!\307?\024M\1778\345\310\310?W\213\314\251,\326\324\277\370\020Jt\026\354\304?\252\007\304\0006A\332\277XJ\277i\030\314\317?\300q\371\326\202\013\274\277\022_\373\322\002\025\331\277\202\327\370\276\005\211\326?\326a_\0016h\312\277S5\311[\344\301\335\277\204\274\\\366\014*\341\277"
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 12
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/w_f_diag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "(\034\206\377TN\345?\274\257\0231\005\325\340?\230\241\023\325\2727\355\277"
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/w_f_diag/read"
  op: "Identity"
  input: "rnn/lstm_cell/w_f_diag"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/w_i_diag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\305C\320\232$\220\277\210G\233\246C\362\353\277\300\306\216tSt\253?"
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/w_i_diag/read"
  op: "Identity"
  input: "rnn/lstm_cell/w_i_diag"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/w_o_diag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\254\263\354\340p\336\345\277\320[\342\254U\\\320?\310\036+\314\375c\344?"
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/w_o_diag/read"
  op: "Identity"
  input: "rnn/lstm_cell/w_o_diag"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/LSTMCellZeroState/zeros_1"
  input: "rnn/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/lstm_cell/concat"
  input: "rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/lstm_cell/MatMul"
  input: "rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/split"
  op: "Split"
  input: "rnn/lstm_cell/split/split_dim"
  input: "rnn/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/add"
  op: "Add"
  input: "rnn/lstm_cell/split:2"
  input: "rnn/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul"
  op: "Mul"
  input: "rnn/lstm_cell/w_f_diag/read"
  input: "rnn/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_1"
  op: "Add"
  input: "rnn/lstm_cell/add"
  input: "rnn/lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid"
  input: "rnn/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/lstm_cell/w_i_diag/read"
  input: "rnn/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_2"
  op: "Add"
  input: "rnn/lstm_cell/split"
  input: "rnn/lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_3"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_1"
  input: "rnn/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_3"
  op: "Add"
  input: "rnn/lstm_cell/mul_1"
  input: "rnn/lstm_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_4"
  op: "Mul"
  input: "rnn/lstm_cell/w_o_diag/read"
  input: "rnn/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_4"
  op: "Add"
  input: "rnn/lstm_cell/split:3"
  input: "rnn/lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_5"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_2"
  input: "rnn/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/concat_1"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/lstm_cell/mul_5"
  input: "rnn/lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/lstm_cell/concat_1"
  input: "rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/lstm_cell/MatMul_1"
  input: "rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/lstm_cell/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/split_1"
  op: "Split"
  input: "rnn/lstm_cell/split_1/split_dim"
  input: "rnn/lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/lstm_cell/add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/add_5"
  op: "Add"
  input: "rnn/lstm_cell/split_1:2"
  input: "rnn/lstm_cell/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_6"
  op: "Mul"
  input: "rnn/lstm_cell/w_f_diag/read"
  input: "rnn/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_6"
  op: "Add"
  input: "rnn/lstm_cell/add_5"
  input: "rnn/lstm_cell/mul_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_7"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_3"
  input: "rnn/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_8"
  op: "Mul"
  input: "rnn/lstm_cell/w_i_diag/read"
  input: "rnn/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_7"
  op: "Add"
  input: "rnn/lstm_cell/split_1"
  input: "rnn/lstm_cell/mul_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_9"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_4"
  input: "rnn/lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_8"
  op: "Add"
  input: "rnn/lstm_cell/mul_7"
  input: "rnn/lstm_cell/mul_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_10"
  op: "Mul"
  input: "rnn/lstm_cell/w_o_diag/read"
  input: "rnn/lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_9"
  op: "Add"
  input: "rnn/lstm_cell/split_1:3"
  input: "rnn/lstm_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_11"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_5"
  input: "rnn/lstm_cell/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/concat_2"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/lstm_cell/mul_11"
  input: "rnn/lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/lstm_cell/concat_2"
  input: "rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/lstm_cell/MatMul_2"
  input: "rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/lstm_cell/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/split_2"
  op: "Split"
  input: "rnn/lstm_cell/split_2/split_dim"
  input: "rnn/lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/lstm_cell/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/add_10"
  op: "Add"
  input: "rnn/lstm_cell/split_2:2"
  input: "rnn/lstm_cell/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_12"
  op: "Mul"
  input: "rnn/lstm_cell/w_f_diag/read"
  input: "rnn/lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_11"
  op: "Add"
  input: "rnn/lstm_cell/add_10"
  input: "rnn/lstm_cell/mul_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_13"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_6"
  input: "rnn/lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_14"
  op: "Mul"
  input: "rnn/lstm_cell/w_i_diag/read"
  input: "rnn/lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_12"
  op: "Add"
  input: "rnn/lstm_cell/split_2"
  input: "rnn/lstm_cell/mul_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_15"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_7"
  input: "rnn/lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_13"
  op: "Add"
  input: "rnn/lstm_cell/mul_13"
  input: "rnn/lstm_cell/mul_15"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_16"
  op: "Mul"
  input: "rnn/lstm_cell/w_o_diag/read"
  input: "rnn/lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_14"
  op: "Add"
  input: "rnn/lstm_cell/split_2:3"
  input: "rnn/lstm_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_17"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_8"
  input: "rnn/lstm_cell/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/concat_3"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/lstm_cell/mul_17"
  input: "rnn/lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/lstm_cell/concat_3"
  input: "rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/lstm_cell/MatMul_3"
  input: "rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/lstm_cell/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/split_3"
  op: "Split"
  input: "rnn/lstm_cell/split_3/split_dim"
  input: "rnn/lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/lstm_cell/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/lstm_cell/add_15"
  op: "Add"
  input: "rnn/lstm_cell/split_3:2"
  input: "rnn/lstm_cell/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_18"
  op: "Mul"
  input: "rnn/lstm_cell/w_f_diag/read"
  input: "rnn/lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_16"
  op: "Add"
  input: "rnn/lstm_cell/add_15"
  input: "rnn/lstm_cell/mul_18"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_16"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_19"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_9"
  input: "rnn/lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_20"
  op: "Mul"
  input: "rnn/lstm_cell/w_i_diag/read"
  input: "rnn/lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_17"
  op: "Add"
  input: "rnn/lstm_cell/split_3"
  input: "rnn/lstm_cell/mul_20"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_17"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_21"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_10"
  input: "rnn/lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_18"
  op: "Add"
  input: "rnn/lstm_cell/mul_19"
  input: "rnn/lstm_cell/mul_21"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_22"
  op: "Mul"
  input: "rnn/lstm_cell/w_o_diag/read"
  input: "rnn/lstm_cell/add_18"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/add_19"
  op: "Add"
  input: "rnn/lstm_cell/split_3:3"
  input: "rnn/lstm_cell/mul_22"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/lstm_cell/add_19"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/lstm_cell/add_18"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "rnn/lstm_cell/mul_23"
  op: "Mul"
  input: "rnn/lstm_cell/Sigmoid_11"
  input: "rnn/lstm_cell/Tanh_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "rnn/lstm_cell/mul_5"
  input: "rnn/lstm_cell/mul_11"
  input: "rnn/lstm_cell/mul_17"
  input: "rnn/lstm_cell/mul_23"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "rnn/lstm_cell/add_18"
  input: "rnn/lstm_cell/mul_23"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
library {
}
